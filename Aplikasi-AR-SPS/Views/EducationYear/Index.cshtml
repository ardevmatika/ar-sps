@model ClassLibrary.Service.EducationYearModule.Models.EducationYearSearchFormVM
@using WebApplication.Web.UI.Helper
@using ClassLibrary.Service.EducationYearModule.Models
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Daftar - Tahun Ajaran";
}

<h2>Daftar</h2>

@using (Html.BeginForm(null, null, FormMethod.Get))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Tahun Ajaran | @Html.ActionLink("Tambah Data", "Create")</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SchoolId, Model.Schools() , "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YearFrom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YearFrom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.YearFrom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YearTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YearTo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.YearTo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Cari" class="btn btn-default" />
            <input type="button" value="Batal" onclick="window.location.href='@Url.Action("Index")'" class="btn btn-default" />
        </div>
    </div>
    <hr />
</div>
}

@if (!String.IsNullOrEmpty(ViewBag.messageInfo))
{
    <div class="alert alert-success alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        @ViewBag.messageInfo
    </div>
}

@{
    var header = new EducationYearSearchDataVM();
}
<table id="tableData" class="table nowrap" style="width:100%">
    <thead>
        <tr>
            <th>
                @GeneralHelper.DisplayName(header.School.GetType(), nameof(header.School.Name))
            </th>
            <th>
                @GeneralHelper.DisplayName(header.GetType(), nameof(header.EducationYearName))
            </th>
            <th>
                @GeneralHelper.DisplayName(header.GetType(), nameof(header.IsActive))
            </th>
            <th>
                Tingkat Kelas dan Rombongan Belajar (Kelas)
            </th>
            <th>
                Tindakan
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.School.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EducationYearName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                <ul>
                    @foreach (var cl in item.ClassLevels.OrderBy(x => x.ClassLevelOrder))
                    {
                        <li>
                            @cl.Name
                            <ul>
                                @foreach (var cg in cl.ClassGroups)
                                {
                                    <li>
                                        @cg.ClassGroupName
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </td>
            <td>
                <div class="dropdown">
                    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Menu
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                        <li>@Html.ActionLink("Edit", "Edit", new { id = item.EducationYearId })</li>
                        <li>@Html.ActionLink("Detail", "Details", new { id = item.EducationYearId }) </li>
                        <li>@Html.ActionLink("Hapus", "Delete", new { id = item.EducationYearId })</li>
                    </ul>
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>

Page @(Model.Results.PageCount < Model.Results.PageNumber ? 0 : Model.Results.PageNumber) of @Model.Results.PageCount

@Html.PagedListPager(Model.Results, page => Url.Action("Index", GeneralHelper.CombineRoute(Model.GetCurrentRoute(), new RouteValueDictionary() { { nameof(Model.CurrentPage), page } })))


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#tableData').DataTable({
            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: 4 },
                { responsivePriority: 3, targets: 1 },
            ],
            ordering: false,
            paging: false,
            searching: false,
            info: false,
        });
    });
</script>