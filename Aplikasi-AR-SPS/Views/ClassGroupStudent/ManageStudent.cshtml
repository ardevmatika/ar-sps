@model ClassLibrary.Service.ClassGroupStudentModule.Models.ClassGroupStudentManageStudentSearchFormVM
@using WebApplication.Web.UI.Helper
@using ClassLibrary.Service.ClassGroupStudentModule.Models
@using ClassLibrary.Entities.Models
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Kelola - Penempatan Siswa (Ke Kelas)";
}

<h2>Kelola</h2>

@using (Html.BeginForm(null, null, FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Penempatan Siswa (Ke Kelas) | @Html.DisplayFor(model => model.ClassGroupName)</h4>
        <hr />

        @if (!String.IsNullOrEmpty(ViewBag.messageInfo))
        {
            <div class="alert alert-success alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @ViewBag.messageInfo
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NationalIdentificationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NationalIdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NationalIdentificationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cari" class="btn btn-default" />
                <input type="button" value="Batal" onclick="window.location.href='@Url.Action("ManageStudent", new { id = Model.ClassGroupId })'" class="btn btn-default" />
            </div>
        </div>
        <hr />
    </div>
}



@{
    var header = new ClassGroupStudentManageStudentSearchDataVM();
    var headerEnrollment = new Enrollment();
}
<table id="tableData" class="table nowrap" style="width:100%">
    <thead>
        <tr>
            <th>
                @GeneralHelper.DisplayName(header.GetType(), nameof(header.Name))
            </th>
            <th>
                @GeneralHelper.DisplayName(header.GetType(), nameof(header.IdentificationNumber))
            </th>
            <th>
                @GeneralHelper.DisplayName(header.GetType(), nameof(header.NationalIdentificationNumber))
            </th>
            <th>
                @GeneralHelper.DisplayName(header.GetType(), nameof(header.BiologicalMotherName))
            </th>
            <th>
                Tambahkan
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdentificationNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NationalIdentificationNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BiologicalMotherName)
                </td>
                <td>
                    <a class="btn btn-default" onclick="return confirm('Apakah anda yakin akan menambahkan siswa @item.Name (@item.IdentificationNumber) ke kelas ini?' )" href="@Url.Action("ManageStudent",GeneralHelper.CombineRoute(Model.GetCurrentRoute(), new RouteValueDictionary() { { nameof(item.StudentId), item.StudentId  }, { "ActionmManage", "Add"} }))">Tambahkan</a>
                </td>
            </tr>
        }
    </tbody>
</table>

Page @(Model.Results.PageCount < Model.Results.PageNumber ? 0 : Model.Results.PageNumber) of @Model.Results.PageCount

@Html.PagedListPager(Model.Results, page => Url.Action("Index", GeneralHelper.CombineRoute(Model.GetCurrentRoute(), new RouteValueDictionary() { { nameof(Model.CurrentPage), page } })))

<div class="form-horizontal">
    <h4>Data siswa @Html.DisplayFor(model => model.ClassGroupName)</h4>
    <table id="tableDataSiswa" class="table nowrap" style="width:100%">
        <thead>
            <tr>
                <th>
                    @GeneralHelper.DisplayName(header.GetType(), nameof(header.Name))
                </th>
                <th>
                    @GeneralHelper.DisplayName(header.GetType(), nameof(header.IdentificationNumber))
                </th>
                <th>
                    @GeneralHelper.DisplayName(header.GetType(), nameof(header.NationalIdentificationNumber))
                </th>
                <th>
                    @GeneralHelper.DisplayName(header.GetType(), nameof(header.BiologicalMotherName))
                </th>
                <th>
                    @GeneralHelper.DisplayName(headerEnrollment.GetType(), nameof(headerEnrollment.EffectiveMonthFrom))
                </th>
                <th>
                    @GeneralHelper.DisplayName(headerEnrollment.GetType(), nameof(headerEnrollment.EffectiveMonthTo))
                </th>
                <th>
                    Keluarkan
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Enrolments.OrderBy(x => x.Student.Name))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Student.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Student.IdentificationNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Student.NationalIdentificationNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Student.BiologicalMotherName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EffectiveMonthFromName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EffectiveMonthToName)
                    </td>
                    <td>
                        <a 
                           class="btn btn-default" 
                           onclick="return confirm('Apakah anda yakin akan mengeluarkan siswa @item.Student.Name (@item.Student.IdentificationNumber) dari kelas ini?' )" 
                           href="@Url.Action(
                                "ManageStudent",
                                GeneralHelper.CombineRoute(
                                    Model.GetCurrentRoute(), 
                                    new RouteValueDictionary() { { nameof(item.Student.StudentId), item.Student.StudentId  }, { "ActionmManage", "Remove"} }
                                )
                            )">Keluarkan</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div>
    @Html.ActionLink("Kembali ke daftar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#tableData').DataTable({
            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: 4 },
                { responsivePriority: 3, targets: 1 },
            ],
            ordering: false,
            paging: false,
            searching: false,
            info: false,
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#tableDataSiswa').DataTable({
            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: 4 },
                { responsivePriority: 3, targets: 1 },
            ],
            ordering: false,
            paging: false,
            searching: false,
            info: false,
        });
    });
</script>