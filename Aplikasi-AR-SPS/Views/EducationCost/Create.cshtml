@model ClassLibrary.Service.EducationCostModule.Models.EducationCostCreateFormVM
@using ClassLibrary.Entities.Models

@{
    ViewBag.Title = "Tambah - Biaya Pendidikan";
}

<h2>Tambah</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Biaya Pendidikan</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EducationYearId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.EducationYearId == 0)
            {
                @Html.DropDownListFor(model => model.EducationYearId, Model.EducationYears(), "", new { @class = "form-control" })
            }
            else
            {
                @Html.DropDownListFor(model => model.EducationYearId, Model.EducationYears(), "", new { @class = "form-control", @readonly = "readonly" })
            }
            @Html.ValidationMessageFor(model => model.EducationYearId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CostType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CostType, EnumHelper.GetSelectList(typeof(CostTypeEnum)), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CostType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CostName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CostName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CostStr, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostStr, new { htmlAttributes = new { @class = "form-control currency" } })
            @Html.ValidationMessageFor(model => model.CostStr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.EducationYearId != 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ClassLevelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassLevelId, Model.ClassLevels(), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassLevelId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @if (Model.EducationYearId == 0)
            {
                <input name="submit" type="submit" value="Selanjutnya" class="btn btn-default" />
            }
            else
            {
                <input type="button" onclick="window.history.go(-1)" value="Sebelumnya" class="btn btn-default" />
                <input name="submit" type="submit" value="Simpan" class="btn btn-default" />
            }
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Kembali ke daftar", "Index")
</div>