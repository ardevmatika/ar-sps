@model ClassLibrary.Service.UserAccessModule.Models.UserAccessEditVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Akses</h4>
        <hr />
        
        @if (!String.IsNullOrEmpty(ViewBag.messageInfo))
        {
            <div class="alert alert-success alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @ViewBag.messageInfo
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tittle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tittle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tittle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitDivisionDepartment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitDivisionDepartment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitDivisionDepartment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WhatsAppNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WhatsAppNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WhatsAppNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelephoneExtentionNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelephoneExtentionNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelephoneExtentionNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirmation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordConfirmation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserAccessEditDetailApplicationModuleVMs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.UserAccessEditDetailApplicationModuleVMs.Where(m => m.IsSelected == false).Count() > 0)
                {
                    @Html.CheckBox("SelectAll", new { @onChange = "SelectAllCheckbox(this)" })
                }
                else
                {
                    @Html.CheckBox("SelectAll", new { @onChange = "SelectAllCheckbox(this)", @value="true", @checked="checked" })
                }
                <span>&nbsp; Pilih Semua</span>
                <br /><br />
                <div id="ListModule">
                    @for (int i = 0; i < Model.UserAccessEditDetailApplicationModuleVMs.Count; i++)
                    {
                        @Html.CheckBoxFor(model => model.UserAccessEditDetailApplicationModuleVMs[i].IsSelected)
                        <span>&nbsp;</span>
                        @Html.DisplayFor(model => model.UserAccessEditDetailApplicationModuleVMs[i].ModuleDisplayName)
                        @Html.HiddenFor(model => model.UserAccessEditDetailApplicationModuleVMs[i].Module)
                        @Html.HiddenFor(model => model.UserAccessEditDetailApplicationModuleVMs[i].ApplicationModuleId)
                        <br />
                    }
                </div>
                @Html.ValidationMessageFor(model => model.UserAccessEditDetailApplicationModuleVMs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Simpan" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Kembali ke daftar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    function SelectAllCheckbox(inputSelectAll) {
        if (inputSelectAll.checked) {
            $('#ListModule :checkbox:enabled').prop('checked', true);
        } else {
            $('#ListModule :checkbox:enabled').prop('checked', false);
        }
    }
    function SelectAllCheckboxSchool(inputSelectAll) {
        if (inputSelectAll.checked) {
            $('#ListSchool :checkbox:enabled').prop('checked', true);
        } else {
            $('#ListSchool :checkbox:enabled').prop('checked', false);
        }
    }
</script>